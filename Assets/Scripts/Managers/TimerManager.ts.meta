fileFormatVersion: 2
guid: d90faef19bf09df41b09b855431e178b
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\",
    { value: true });\r\nconst UnityEngine_1 = require(\"UnityEngine\");\r\nconst
    ZEPETO_Script_1 = require(\"ZEPETO.Script\");\r\nconst GameRunnerManager_1 =
    require(\"./GameRunnerManager\");\r\n// This class manages the game timer\r\nclass
    TimerManager extends ZEPETO_Script_1.ZepetoScriptBehaviour {\r\n    constructor()
    {\r\n        super(...arguments);\r\n        // Duration of the game timer in
    seconds\r\n        this.gameSecondsTime = 10;\r\n    }\r\n    // Awake is called
    when the script instance is being loaded\r\n    Awake() {\r\n        // Allocating
    the instance of this class to make it a \"singleton\"\r\n        if (ZEPETO_Script_1.ZepetoScriptBehaviour.op_Equality(TimerManager.Instance,
    null))\r\n            TimerManager.Instance = this;\r\n        else\r\n           
    UnityEngine_1.GameObject.Destroy(this);\r\n    }\r\n    // Update is called every
    frame\r\n    Update() {\r\n        // Check if the current time has exceeded
    the specified game duration\r\n        if (this.currentTime >= this.gameSecondsTime)
    {\r\n            // Trigger game over when time exceeds the limit\r\n           
    GameRunnerManager_1.default.Instance.OnRunnerGameOver();\r\n        }\r\n   
    }\r\n    // This methods resets the current time value\r\n    StartTimer() {\r\n       
    // Set the start time to the current time when the timer starts\r\n        this.startTime
    = UnityEngine_1.Time.time;\r\n    }\r\n    // This method resets the current
    time to zero\r\n    ResetTimer() {\r\n        this.currentTime = 0;\r\n    }\r\n   
    // This method returns the value of the time elapsed between the start time and
    this moment in seconds\r\n    GetTime() {\r\n        // Calculate and update
    the current time elapsed since the timer started\r\n        this.currentTime
    = UnityEngine_1.Time.time - this.startTime;\r\n        return this.currentTime;\r\n   
    }\r\n    // This method returns the formatted string representation of the elapsed
    time\r\n    GetTimeFormated() {\r\n        // Get the time in seconds\r\n       
    let time = this.GetTime();\r\n        // Calculate minutes and seconds\r\n       
    let minutes = Math.floor(time / 59).toString();\r\n        let seconds = ((time
    % 59)).toFixed(0).padStart(2, ''0'');\r\n        // Return the formatted time
    as a string\r\n        return minutes + \":\" + seconds;\r\n    }\r\n}\r\nexports.default
    = TimerManager;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGltZXJNYW5hZ2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiVGltZXJNYW5hZ2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsNkNBQStDO0FBQy9DLGlEQUFxRDtBQUNyRCwyREFBb0Q7QUFFcEQsb0NBQW9DO0FBQ3BDLE1BQXFCLFlBQWEsU0FBUSxxQ0FBcUI7SUFBL0Q7O1FBV0ksd0NBQXdDO1FBQ2pDLG9CQUFlLEdBQVcsRUFBRSxDQUFDO0lBOEN4QyxDQUFDO0lBNUNHLDJEQUEyRDtJQUNwRCxLQUFLO1FBQ1IsaUVBQWlFO1FBQ2pFLElBckJDLHFDQUFxQixDQThEa2lKLFdBQVksQ0F6Q2hrSixZQUFZLENBQUMsUUFBUSxFQUFJLElBQUk7WUFBRSxZQUFZLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQzs7WUFDM0Qsd0JBQVUsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVELCtCQUErQjtJQUMvQixNQUFNO1FBQ0YscUVBQXFFO1FBQ3JFLElBQUksSUFBSSxDQUFFLFdBQVcsSUFBSSxJQUFJLENBQUMsZUFBZSxFQUFDO1lBQzFDLGdEQUFnRDtZQUNoRCwyQkFBaUIsQ0FBQyxRQUFRLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztTQUNqRDtJQUNMLENBQUM7SUFFRCw2Q0FBNkM7SUFDdEMsVUFBVTtRQUNiLCtEQUErRDtRQUMvRCxJQUFJLENBQUMsU0FBUyxHQUFHLGtCQUFJLENBQUMsSUFBSSxDQUFDO0lBQy9CLENBQUM7SUFFRCw4Q0FBOEM7SUFDdkMsVUFBVTtRQUNiLElBQUksQ0FBQyxXQUFXLEdBQUcsQ0FBQyxDQUFDO0lBQ3pCLENBQUM7SUFFRCxzR0FBc0c7SUFDL0YsT0FBTztRQUNWLHdFQUF3RTtRQUN4RSxJQUFJLENBQUMsV0FBVyxHQUFHLGtCQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUM7UUFDOUMsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDO0lBQzVCLENBQUM7SUFFRCw4RUFBOEU7SUFDdkUsZUFBZTtRQUNsQiwwQkFBMEI7UUFDMUIsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLE9BQU8sRUFBWSxDQUFDO1FBQ3BDLGdDQUFnQztRQUNoQyxJQUFJLE9BQU8sR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksR0FBQyxFQUFFLENBQUMsQ0FBQyxRQUFRLEVBQVksQ0FBQztRQUN2RCxJQUFJLE9BQU8sR0FBRyxDQUFDLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFXLENBQUM7UUFDbEUsd0NBQXdDO1FBQ3hDLE9BQU8sT0FBTyxHQUFHLEdBQUcsR0FBRyxPQUFPLENBQUM7SUFDbkMsQ0FBQztDQUNKO0FBMURELCtCQTBEQyJ9","assetPath":"Assets/Scripts/Managers/TimerManager.ts","manifest":{"properties":[{"assembly":"mscorlib","name":"gameSecondsTime","type":"System.Single","isArray":false,"initValue":["10"],"enumKeys":[],"enumValues":[],"attributes":[]}],"name":"TimerManager","description":"","hasAnimatorMove":false},"isCompiled":true}'
  typescriptHash: 7f1e19c72b6af82d58a51780aa5f0931
  onlyWriteTrigger: 0
