fileFormatVersion: 2
guid: 742d3b87131d77a4c888269d7378d5f6
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\",
    { value: true });\r\nconst UnityEngine_1 = require(\"UnityEngine\");\r\nconst
    ZEPETO_Script_1 = require(\"ZEPETO.Script\");\r\nconst GameRunnerManager_1 =
    require(\"./GameRunnerManager\");\r\nclass HealthManager extends ZEPETO_Script_1.ZepetoScriptBehaviour
    {\r\n    //Awake is called when the script instance is being loaded\r\n    Awake()
    {\r\n        //This is hoe the instance of this class is allocated. Wich makes
    it a singleton\r\n        if (HealthManager.Instance == null)\r\n           
    HealthManager.Instance = this;\r\n        else\r\n            UnityEngine_1.GameObject.Destroy(this);\r\n       
    //The current Health is iqual to the max Health\r\n        this.ResetHealth();\r\n   
    }\r\n    //This method will take health to the character, depending on the amount
    of damage the obstacle generate\r\n    generateDamage(amount) {\r\n        this.currentHealth
    -= amount;\r\n        if (this.currentHealth <= 0) {\r\n            GameRunnerManager_1.default.Instance.OnGameOver();\r\n       
    }\r\n    }\r\n    //This method will increase the health of the character depending
    on de amount of life the item give to the player\r\n    generateHealth(amount)
    {\r\n        if (this.currentHealth < this.maxHealth) {\r\n            if ((this.maxHealth
    - this.currentHealth) < amount) {\r\n                this.currentHealth = this.maxHealth;\r\n           
    }\r\n            else {\r\n                this.currentHealth += amount;\r\n           
    }\r\n        }\r\n    }\r\n    // This method returns the internal value of the
    player health\r\n    getCurrentHealth() {\r\n        return this.currentHealth;\r\n   
    }\r\n    // This method reset the heath of the character \r\n    ResetHealth()
    {\r\n        this.currentHealth = this.maxHealth;\r\n    }\r\n}\r\nexports.default
    = HealthManager;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSGVhbHRoTWFuYWdlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkhlYWx0aE1hbmFnZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQSw2Q0FBeUM7QUFDekMsaURBQXNEO0FBQ3RELDJEQUFvRDtBQUVwRCxNQUFxQixhQUFjLFNBQVEscUNBQXFCO0lBTzVELDBEQUEwRDtJQUMxRCxLQUFLO1FBQ0QsZ0ZBQWdGO1FBQ2hGLElBQUksYUFBYSxDQUFDLFFBQVEsSUFBSSxJQUFJO1lBQUUsYUFBYSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7O1lBQzdELHdCQUFVLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzlCLCtDQUErQztRQUMvQyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDdkIsQ0FBQztJQUVELHdHQUF3RztJQUNqRyxjQUFjLENBQUMsTUFBYztRQUNoQyxJQUFJLENBQUMsYUFBYSxJQUFJLE1BQU0sQ0FBQztRQUM3QixJQUFHLElBQUksQ0FBQyxhQUFhLElBQUksQ0FBQyxFQUFDO1lBQ3ZCLDJCQUFpQixDQUFDLFFBQVEsQ0FBQyxVQUFVLEVBQUUsQ0FBQztTQUMzQztJQUNMLENBQUM7SUFFRCxrSEFBa0g7SUFDM0csY0FBYyxDQUFDLE1BQWM7UUFDaEMsSUFBSSxJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxTQUFTLEVBQUU7WUFDckMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxHQUFHLE1BQU0sRUFBRTtnQkFDaEQsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDO2FBQ3ZDO2lCQUNJO2dCQUNELElBQUksQ0FBQyxhQUFhLElBQUksTUFBTSxDQUFDO2FBQ2hDO1NBQ0o7SUFDTCxDQUFDO0lBRUQsOERBQThEO0lBQ3ZELGdCQUFnQjtRQUNuQixPQUFPLElBQUksQ0FBQyxhQUFhLENBQUM7SUFDOUIsQ0FBQztJQUVELGdEQUFnRDtJQUN6QyxXQUFXO1FBQ2QsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDO0lBQ3hDLENBQUM7Q0FHSjtBQS9DRCxnQ0ErQ0MifQ==","assetPath":"Assets/Scripts/Managers/HealthManager.ts","manifest":{"properties":[{"assembly":"mscorlib","name":"maxHealth","type":"System.Single","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"mscorlib","name":"currentHealth","type":"System.Single","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]}],"name":"HealthManager","description":""},"isCompiled":true}'
  typescriptHash: b5171a28fc6c247eda9013eed0fc63ae
  onlyWriteTrigger: 0
