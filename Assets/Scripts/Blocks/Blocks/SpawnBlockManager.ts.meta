fileFormatVersion: 2
guid: 33abd7457c3f24d9682cef34595be7a7
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\",
    { value: true });\r\nconst __UnityEngine__ = require(\"UnityEngine\");\r\n//
    Import necessary modules from the UnityEngine library\r\nconst UnityEngine_1
    = require(\"UnityEngine\");\r\nconst ZEPETO_Script_1 = require(\"ZEPETO.Script\");\r\nconst
    BlocksMoveLeft_1 = require(\"./BlocksMoveLeft\");\r\n// Define the SpawnBlockManager
    class which extends the ZepetoScriptBehaviour class\r\nclass SpawnBlockManager
    extends ZEPETO_Script_1.ZepetoScriptBehaviour {\r\n    constructor() {\r\n       
    super(...arguments);\r\n        // Array to store generated blocks in the game\r\n       
    this.generatedBlocks = [];\r\n        // Position where new blocks will be spawned\r\n       
    this.spawnBlockPosition = new UnityEngine_1.Vector3(20, 0, 0);\r\n        //
    Position to trigger the new block\r\n        this.respawnBlockPositionX = 0;\r\n       
    // X limit where the block is destroyed\r\n        this.xLeftBoundDestroy = -20;\r\n       
    // All blocks speed\r\n        this.allBlocksSpeed = 3;\r\n        // Indicator
    to know if a block has already been spawned\r\n        this.blockSpawned = false;\r\n       
    // Variable initialized with a value of 0\r\n        this.blockRespawnPosition
    = 0;\r\n    }\r\n    // Awake is called when the script instance is being loaded\r\n   
    Awake() {\r\n        // Allocating the instance of this class to make it a \"singleton\"\r\n       
    if (ZEPETO_Script_1.ZepetoScriptBehaviour.op_Equality(SpawnBlockManager.Instance,
    null))\r\n            SpawnBlockManager.Instance = this;\r\n        else\r\n           
    UnityEngine_1.GameObject.Destroy(this);\r\n    }\r\n    // Method to start the
    block manager\r\n    StartSpawnBlockManager() {\r\n        this.GenerateRandomBlock();\r\n   
    }\r\n    // Update is called once per frame\r\n    Update() {\r\n        this.CheckBlockPosition();\r\n   
    }\r\n    // Method to resume the block manager\r\n    ResumeSpawnBlockManager()
    {\r\n        if (this.generatedBlocks != null) {\r\n            if (this.generatedBlocks.length
    != 0) {\r\n                // Iterate through generated blocks\r\n               
    for (const block of this.generatedBlocks) {\r\n                    // Check if
    the block is not null\r\n                    if (__UnityEngine__.Object.op_Inequality(block,
    null)) {\r\n                        // SetMoving(true) on the BlocksMoveLeft
    component of the block\r\n                        block.GetComponent($typeof(BlocksMoveLeft_1.default)).SetMoving(true);\r\n                   
    }\r\n                }\r\n            }\r\n            else\r\n               
    // If there are no generated blocks, generate a random block\r\n               
    this.GenerateRandomBlock();\r\n        }\r\n    }\r\n    // Method to check the
    position of the block\r\n    CheckBlockPosition() {\r\n        // Check if blockGenerated
    is not null (exists).\r\n        if (this.blockGenerated && __UnityEngine__.Object.op_Inequality(this.blockGenerated,
    null)) {\r\n            // If the block''s x-position is less than or equal to
    0 and we haven''t spawned a block yet.\r\n            if (this.blockGenerated.transform.position.x
    <= this.respawnBlockPositionX && !this.blockSpawned) {\r\n                //
    Generate a new random block.\r\n                this.GenerateRandomBlock();\r\n               
    // Indicate that we have spawned a block.\r\n                this.blockSpawned
    = true;\r\n            }\r\n            // If the block''s x-position is greater
    than 0 (moved back for some reason).\r\n            else if (this.blockGenerated.transform.position.x
    > this.respawnBlockPositionX) {\r\n                // Reset the block spawn indicator.\r\n               
    this.blockSpawned = false;\r\n            }\r\n        }\r\n    }\r\n    // Method
    to generate a random block\r\n    GenerateRandomBlock() {\r\n        // Get a
    random number between 0 and the length of the blocks array.\r\n        let n
    = Math.floor(UnityEngine_1.Random.Range(0, this.blocks.length));\r\n        //
    Instantiate a random block from the blocks array at the specified spawn position.\r\n       
    const newBlock = UnityEngine_1.GameObject.Instantiate(this.blocks[n], this.spawnBlockPosition,
    UnityEngine_1.Quaternion.identity, // No rotation applied\r\n        this.transform);\r\n       
    // Assign the newly spawned block to our blockGenerated variable.\r\n       
    this.blockGenerated = newBlock;\r\n        // Add the block to the generatedBlocks
    list.\r\n        this.generatedBlocks.push(this.blockGenerated);\r\n        //
    Set the speed of the newly spawned block\r\n        this.blockGenerated.GetComponent($typeof(BlocksMoveLeft_1.default)).SetBlockSpeed(this.allBlocksSpeed);\r\n       
    // Call function to destroy the blocks that are beyond a point.\r\n        this.DestroyBlock();\r\n   
    }\r\n    // Method to stop the block manager\r\n    StopSpawnBlockManager() {\r\n       
    for (const block of this.generatedBlocks) {\r\n            if (__UnityEngine__.Object.op_Inequality(block,
    null)) {\r\n                block.GetComponent($typeof(BlocksMoveLeft_1.default)).SetMoving(false);\r\n           
    }\r\n        }\r\n    }\r\n    // Method to set the speed of the blocks\r\n   
    SetBlockSpeed(value) {\r\n        this.allBlocksSpeed = value;\r\n    }\r\n   
    // Method to destroy blocks\r\n    DestroyBlock() {\r\n        let blocksToDestroy
    = [];\r\n        // Check if the block is not null\r\n        for (const block
    of this.generatedBlocks) {\r\n            // Check if the block is not null\r\n           
    if (__UnityEngine__.Object.op_Inequality(block, null)) {\r\n                //
    Check if the block''s x-position is less than or equal to the specified bound\r\n               
    if (block.transform.position.x <= this.xLeftBoundDestroy) {\r\n                   
    // Mark the block for destruction by adding it to the blocksToDestroy list\r\n                   
    blocksToDestroy.push(block);\r\n                }\r\n            }\r\n       
    }\r\n        // Destroy the blocks marked for destruction\r\n        for (const
    block of blocksToDestroy) {\r\n            block.GetComponent($typeof(BlocksMoveLeft_1.default)).DestroyBlock();\r\n       
    }\r\n        // Filter out null references in generatedBlocks\r\n        this.generatedBlocks
    = this.generatedBlocks.filter(block => __UnityEngine__.Object.op_Inequality(block,
    null));\r\n    }\r\n    // Method to destroy all blocks\r\n    DestroyAllBlocks()
    {\r\n        // Stop the spawn manager\r\n        this.StopSpawnBlockManager();\r\n       
    // Iterate through generated blocks\r\n        for (const block of this.generatedBlocks)
    {\r\n            // Check if the block is not null\r\n            if (__UnityEngine__.Object.op_Inequality(block,
    null)) {\r\n                // Destroy the block\r\n                UnityEngine_1.GameObject.Destroy(block);\r\n           
    }\r\n        }\r\n    }\r\n}\r\nexports.default = SpawnBlockManager;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3Bhd25CbG9ja01hbmFnZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJTcGF3bkJsb2NrTWFuYWdlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSx3REFBd0Q7QUFDeEQsNkNBQXFFO0FBQ3JFLGlEQUFxRDtBQUNyRCxxREFBOEM7QUFFOUMsbUZBQW1GO0FBQ25GLE1BQXFCLGlCQUFrQixTQUFRLHFDQUFxQjtJQUFwRTs7UUFRSSw4Q0FBOEM7UUFDdkMsb0JBQWUsR0FBaUIsRUFBRSxDQUFDO1FBRTFDLDRDQUE0QztRQUNwQyx1QkFBa0IsR0FBWSxJQUFJLHFCQUFPLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUU1RCxvQ0FBb0M7UUFDNUIsMEJBQXFCLEdBQVcsQ0FBQyxDQUFDO1FBRTFDLHVDQUF1QztRQUMvQixzQkFBaUIsR0FBVyxDQUFDLEVBQUUsQ0FBQztRQUV4QyxtQkFBbUI7UUFDWixtQkFBYyxHQUFXLENBQUMsQ0FBQztRQUtsQyx3REFBd0Q7UUFDaEQsaUJBQVksR0FBWSxLQUFLLENBQUM7UUFFdEMseUNBQXlDO1FBQ2pDLHlCQUFvQixHQUFXLENBQUMsQ0FBQztJQW9JN0MsQ0FBQztJQWxJRywyREFBMkQ7SUFDcEQsS0FBSztRQUNSLGlFQUFpRTtRQUNqRSxJQXZDQyxxQ0FBcUIsQ0F3S21oQixXQUFZLENBaklqakIsaUJBQWlCLENBQUMsUUFBUSxFQUFJLElBQUk7WUFBRSxpQkFBaUIsQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDOztZQUNyRSx3QkFBVSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBRUQsb0NBQW9DO0lBQ3BDLHNCQUFzQjtRQUNsQixJQUFJLENBQUMsbUJBQW1CLEVBQUUsQ0FBQztJQUMvQixDQUFDO0lBRUQsa0NBQWtDO0lBQ2xDLE1BQU07UUFDRixJQUFJLENBQUMsa0JBQWtCLEVBQUUsQ0FBQztJQUM5QixDQUFDO0lBRUQscUNB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","assetPath":"Assets/Scripts/Blocks/Blocks/SpawnBlockManager.ts","manifest":{"properties":[{"assembly":"UnityEngine.CoreModule","name":"blocks","type":"UnityEngine.GameObject[]","isArray":true,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.CoreModule","name":"generatedBlocks","type":"UnityEngine.GameObject[]","isArray":true,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"mscorlib","name":"allBlocksSpeed","type":"System.Single","isArray":false,"initValue":["3"],"enumKeys":[],"enumValues":[],"attributes":[]}],"name":"SpawnBlockManager","description":"","hasAnimatorMove":false},"isCompiled":true}'
  typescriptHash: 65756265090988b00081061353111f0c
  onlyWriteTrigger: 0
